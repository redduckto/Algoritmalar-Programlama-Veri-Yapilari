
public class PartNQSort {

    private int[] array;
    private int elem;

    public PartNQSort(int size){

        array=new int[size];
        elem=0;
    }

    public int size()
    { return elem; }

    public void display()
    {
        System.out.print("A=");
        for(int j=0; j<elem; j++)
        System.out.print(array[j] +" ");
        System.out.println(" ");
    }
    public void insert(int value)
    {
        array[elem] =value;
    elem++;
    }


    public int partnow(int left,int right,int pivot){

        int leftref=left-1;
        int rightref=right+1;


        while(true) {

            while (leftref < right && array[++leftref] < pivot)
                ;


            while (rightref > left && array[--rightref] > pivot)
                ;
            if(leftref>=rightref) break;
            else
                swap(leftref,rightref);
        }
                return leftref;
    }
            public void swap(int a,int b){
                int temp;
                temp=array[a];
                array[a]=array[b];
                array[b]=temp;
            }

    public void quickSort()
    {
        recQuickSort(0, elem-1);
    }
    public void recQuickSort(int left, int right)
    {
        if(right-left <= 0)
            return;
        else
        {
            int pivot = array[right];

            int partition = partnow(left, right,pivot);
            recQuickSort(left, partition-1);
            recQuickSort(partition+1, right);
        }
    }



}
